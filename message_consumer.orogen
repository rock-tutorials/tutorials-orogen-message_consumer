name "message_consumer"

using_library "message_driver"
import_types_from "message_driver/Message.hpp"

# If the component/deployments use data types that are defined in other oroGen
# projects, these projects should be imported there as well.
# import_types_from "base"

# Declare a new task context (i.e., a component)
#
# The corresponding C++ class can be edited in tasks/Task.hpp and
# tasks/Task.cpp, and will be put in the basics_tutorial/orogen/message_consumer namespace.
task_context "Task" do
   # An input port, i.e. an object from which the component gets data from
   # other components' outputs
   #
   # Data can be retrieved using _input.read(value), which returns true if data
   # was available, and false otherwise. _input.connected() returns if this
   # input is connected to an output or not.
   input_port "messages", "message_driver/Message"


   # If you want that component's updateHook() to be executed when the "input"
   # port gets data, uncomment this
   port_driven "messages"
end
